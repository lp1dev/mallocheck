#!/usr/bin/python

#Malloc Check v0.1
#Send any suggestion , question at amsell_j@epitech.eu

import          sys
import          os.path
import          string

def             ismalloc(line1,line2, num):
    if (line1.find('malloc') != -1):
        print("[Line "+str(num +1)+"]")
        print ("\tMalloc found")
        if (line2.find('NULL') == -1):
            print ("\t\t\033[31m[WARNING] : Malloc seems unverified!\033[0;0m")
        else:
            print ("\t\t\033[32mMalloc seems OK\033[0;0m")

def             seekmalloc(c_file):
    txt = c_file.readlines();
 
    i = 0;
    while (i + 1 < len(txt)):
        ismalloc(txt[i], txt[i + 1], i);
        i = i + 1    

def             check_integrity(arguments):
    i = 1
    if (len(arguments) < 2):
        print ("Error : No .c file specified")
        return (-1);
    if (arguments[1] == "-h") or (arguments[1] == "help") or (arguments[1] == "-help"):
        print ("Usage : ./mallocheck [options] file.c [files.c]\n\n-h   -help   help : Show this usage screen")
        return (-1)
    while (i < len(arguments)):
        if (os.path.isdir(arguments[i])):
            print ("Error : "+arguments[i]+" is a directory")
            return (-1)
        if (os.path.isfile(arguments[i]) == 0):
            print ("Error : The file "+arguments[i]+" doesn't exists")
            return (-1)
        i = i + 1


def             checkfile(tab):
    i = 1
    while (i < len(tab)):
        filename = tab[i];
        c_file = open(tab[i], "r")
        print ("-- Checking file "+tab[i]+" --")
        seekmalloc(c_file)
        i = i + 1
    return (0);

def             main():
    if ((check_integrity(sys.argv)) == -1):
        return (-1)
    checkfile(sys.argv)
    print ("-- End of file check --")

main();
